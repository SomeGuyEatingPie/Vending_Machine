/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.vending_machine;

import java.util.Set;
import java.util.HashSet;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sean Johnson
 */
public class External_Interface extends javax.swing.JFrame {
        
    private String[] labelA = {"A1", "A2", "A3", "A4", "A5", "A6"};
    private int[] stockA = {10, 5, 3, 0, 0, 0};
    private int[] priceA = {100, 100, 100, 100, 100, 100};
    private String[] labelB = {"B1", "B2", "B3", "B4", "B5", "B6"};
    private int[] stockB = {10, 3, 7, 0, 0, 0};
    private int[] priceB = {120, 120, 120, 120, 120, 120};
    private String[] labelC = {"C1", "C2", "C3", "C4", "C5", "C6"};
    private int[] stockC = {10, 10, 10, 0, 0, 0};
    private int[] priceC = {99, 99, 99, 99, 99, 99};

    private DefaultTableModel products = new DefaultTableModel();

    private Display currentDisplay = new Display();
    private String currentInput = "";
    private int credit = 0;

    private double[][]coins = new double[][]{
        {1.0, 0.01, 0.1},
        {2.0, 0.02, 0.2},
        {5.0, 0.05, 0.5},
        {10.0, 0.10, 1.0},
        {20.0, 0.20, 2.0},
        {50.0, 0.50, 5.0},
        {100.0, 1.00, 10.0},
        {200.0, 2.00, 20.0}
    };

    
    /**
     * Creates new form External_Interface
     */
    public External_Interface() {
        initComponents();
        this.updateTable();
        updateDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStock = new javax.swing.JTable();
        btnA = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textpDisplay = new javax.swing.JTextPane();
        btn1p = new javax.swing.JButton();
        btn2p = new javax.swing.JButton();
        btn5p = new javax.swing.JButton();
        btn10p = new javax.swing.JButton();
        btn20p = new javax.swing.JButton();
        btn50p = new javax.swing.JButton();
        btn£1 = new javax.swing.JButton();
        btn£2 = new javax.swing.JButton();
        btnCustom = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        btnScan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStock.setShowGrid(true);
        jScrollPane1.setViewportView(tblStock);

        btnA.setLabel("A");
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnB.setText("B");
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnC.setText("C");
        btnC.setActionCommand("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(textpDisplay);

        btn1p.setText("1p");
        btn1p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1pActionPerformed(evt);
            }
        });

        btn2p.setText("2p");
        btn2p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2pActionPerformed(evt);
            }
        });

        btn5p.setText("5p");
        btn5p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5pActionPerformed(evt);
            }
        });

        btn10p.setText("10p");
        btn10p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10pActionPerformed(evt);
            }
        });

        btn20p.setText("20p");
        btn20p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn20pActionPerformed(evt);
            }
        });

        btn50p.setText("50p");
        btn50p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn50pActionPerformed(evt);
            }
        });

        btn£1.setText("£1");
        btn£1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn£1ActionPerformed(evt);
            }
        });

        btn£2.setText("£2");
        btn£2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn£2ActionPerformed(evt);
            }
        });

        btnCustom.setText("custom");
        btnCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomActionPerformed(evt);
            }
        });

        btnReturn.setText("return credit");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnScan.setText("scan card");
        btnScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnScan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCustom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn10p)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn£2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn5p)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn£1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1p)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn20p))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn2p)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn50p))
                            .addComponent(btnReturn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnScan)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn1p)
                            .addComponent(btn20p))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn2p)
                            .addComponent(btn50p))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn5p)
                            .addComponent(btn£1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn10p)
                            .addComponent(btn£2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCustom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReturn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        
        if (currentInput == "") {

            currentInput += "A";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }
        else {

            currentInput = "A";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }

    }//GEN-LAST:event_btnAActionPerformed

    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
        if (currentInput == "") {

            currentInput += "B";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }
        else {

            currentInput = "B";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }
    }//GEN-LAST:event_btnBActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        if (currentInput == "") {

            currentInput += "C";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }
        else {

            currentInput = "C";
            currentDisplay = new Display(currentInput);
            updateDisplay();
        }
    }//GEN-LAST:event_btnCActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        numInput(1);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        numInput(2);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        numInput(3);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        numInput(4);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        numInput(5);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        numInput(6);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn1pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1pActionPerformed
        coinIn(0.01, 0.1);
    }//GEN-LAST:event_btn1pActionPerformed

    private void btn2pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2pActionPerformed
        coinIn(0.02, 0.2);
    }//GEN-LAST:event_btn2pActionPerformed

    private void btn5pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5pActionPerformed
        coinIn(0.05, 0.5);
    }//GEN-LAST:event_btn5pActionPerformed

    private void btn10pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10pActionPerformed
        coinIn(0.10, 1.0);
    }//GEN-LAST:event_btn10pActionPerformed

    private void btn20pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn20pActionPerformed
        coinIn(0.20, 2.0);
    }//GEN-LAST:event_btn20pActionPerformed

    private void btn50pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn50pActionPerformed
        coinIn(0.50, 5.0);
    }//GEN-LAST:event_btn50pActionPerformed

    private void btn£1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn£1ActionPerformed
        coinIn(1.00, 10.0);
    }//GEN-LAST:event_btn£1ActionPerformed

    private void btn£2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn£2ActionPerformed
        coinIn(2.00, 20.0);
    }//GEN-LAST:event_btn£2ActionPerformed

    private void btnCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomActionPerformed
        coinIn(Double.parseDouble(JOptionPane.showInputDialog(this, "Input coin's magnetism value")), Double.parseDouble(JOptionPane.showInputDialog(this, "Input coin's size")));
    }//GEN-LAST:event_btnCustomActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        credit = 0;
        currentInput = "";
        currentDisplay = new Display();
        updateDisplay();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScanActionPerformed
        
        String rowChar = currentInput.substring(0, 1);

        int colNum = Integer.parseInt(currentInput.substring(1)) - 1;
        
        if (credit == 0 && currentInput.length() == 2 && (rowChar.equals("A") || rowChar.equals("B") ||rowChar.equals("C")) ) {

            if (rowChar.equals("A")) {
                if (chargeCard(priceA[colNum])){

                    credit += (int) priceA[colNum];

                    buyDrink(rowChar, colNum, priceA[colNum]);

                }
                else {
                    currentDisplay = new Display("Transaction Failed");
                    updateDisplay();
                }
                if (rowChar.equals("B")) {
                    if (chargeCard(priceB[colNum])){
    
                        credit += (int) priceB[colNum];
    
                        buyDrink(rowChar, colNum, priceB[colNum]);
    
                    }
                    else {
                        currentDisplay = new Display("Transaction Failed");
                        updateDisplay();
                    }
                }
                if (rowChar.equals("C")) {
                    if (chargeCard(priceC[colNum])){
    
                        credit += (int) priceC[colNum];
    
                        buyDrink(rowChar, colNum, priceC[colNum]);
    
                    }
                    else {
                        currentDisplay = new Display("Transaction Failed");
                        updateDisplay();
                    }
                }
            }

        }
    }//GEN-LAST:event_btnScanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(External_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(External_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(External_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(External_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new External_Interface().setVisible(true);
            }
        });
        
    }
    
    // Updates the jTable with new values
    // Called when first opening and whenever stock changes
    private void updateTable() {
        

        this.products = new DefaultTableModel();
       
        this.products.setColumnIdentifiers( new String[] {"1", "2", "3", "4", "5", "6"});

            String[] newARow = new String[6];
            String[] newBRow = new String[6];
            String[] newCRow = new String[6];

            for (int i = 0; i <= 5; i++) {
                
                newARow[i] = labelA[i] + " / " + Integer.toString(stockA[i]);
                newBRow[i] = labelB[i] + " / " + Integer.toString(stockB[i]);
                newCRow[i] = labelC[i] + " / " + Integer.toString(stockC[i]);

            }

            this.products.addRow(newARow);
            this.products.addRow(newBRow);
            this.products.addRow(newCRow);


        tblStock.setModel(products);
         
    }

    private void updateDisplay() {

        textpDisplay.setText(currentDisplay.getMessage());

    }

    private void numInput(int input) {

        if (currentInput.equals("A") || currentInput.equals("B") || currentInput.equals("C")) {
            
            currentInput += input;

            stockPriceCheck();

        }
    }

    private void coinIn(double mag, double size) {

        boolean valid = false;
        int value = 0;

        for (int i = 0; i < coins.length; i++) {

            if (coins[i][1] == mag && coins[i][2] == size){

                valid = true;
                value = (int) coins[i][0];

            }

        }

        if (valid == true){
            credit += value;
        }
        else {
            JOptionPane.showMessageDialog(this, "The coin is returned");
        }

        if (currentInput.length() < 2) {

            currentDisplay = new Display(credit);
            updateDisplay();

        }
        else {

            stockPriceCheck();

        }

    }

    private void stockPriceCheck() {

        String rowChar = currentInput.substring(0, 1);

        int colNum = Integer.parseInt(currentInput.substring(1)) - 1;

        if (rowChar.equals("A")) {
                
            if (priceA[colNum] - credit <= 0) {

                buyDrink(rowChar, colNum, priceA[colNum]);

            }
            else{
                currentDisplay = new Display(currentInput, stockA[colNum], priceA[colNum], credit);
                updateDisplay();
            }

        }
        else if (rowChar.equals("B")) {
              
            if (priceB[colNum] - credit <= 0) {

                buyDrink(rowChar, colNum, priceB[colNum]);

            }
            else{
                currentDisplay = new Display(currentInput, stockB[colNum], priceB[colNum], credit);
                updateDisplay();
            }

        }
        else if (rowChar.equals("C")) {
                
            if (priceC[colNum] - credit <= 0) {

                buyDrink(rowChar, colNum, priceC[colNum]);

            }
            else{
                currentDisplay = new Display(currentInput, stockC[colNum], priceC[colNum], credit);
            updateDisplay();
            }
        }

    }

    private void buyDrink(String rowChar, int colNum, double price) {

        if (rowChar.equals("A")) {

            credit -= (int) price;
            stockA[colNum] -= 1;

            if (credit > 0) {

                dispenseChange();

            }

            JOptionPane.showMessageDialog(this, String.format("The machine dispenses a drink from %s", (rowChar + Integer.toString(colNum + 1))));

            

        }
        else if(rowChar.equals("B")) {

            credit -= (int) price;
            stockB[colNum] -= 1;

            if (credit > 0) {

                dispenseChange();

            }

            JOptionPane.showMessageDialog(this, String.format("The machine dispenses a drink from %s", (rowChar + Integer.toString(colNum + 1))));

        }
        else if(rowChar.equals("C")) {

            credit -= (int) price;
            stockC[colNum] -= 1;

            if (credit > 0) {

                dispenseChange();

            }

            JOptionPane.showMessageDialog(this, String.format("The machine dispenses a drink from %s", (rowChar + Integer.toString(colNum + 1))));

            

        }

        currentDisplay = new Display();
        updateDisplay();
        updateTable();

    }

    private void dispenseChange() {

        JOptionPane.showMessageDialog(this, String.format("The machine dispenses %dp in change", credit));

        credit = 0;
    }

    /* code to request transaction from card server goes here.
    10% discount is applied to value deducted from customer's account */
    private boolean chargeCard(int price) {

        currentDisplay = new Display("10% discount applied");
        updateDisplay();

        return true;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10p;
    private javax.swing.JButton btn1p;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn20p;
    private javax.swing.JButton btn2p;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn50p;
    private javax.swing.JButton btn5p;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnCustom;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnScan;
    private javax.swing.JButton btn£1;
    private javax.swing.JButton btn£2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblStock;
    private javax.swing.JTextPane textpDisplay;
    // End of variables declaration//GEN-END:variables
}
